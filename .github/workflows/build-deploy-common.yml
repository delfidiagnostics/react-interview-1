name: Build and Deploy Common

on:
  workflow_call:
    inputs:
      stack:
        required: true
        type: string
        description: the stack to deploy to. options are [dev, stage, prod]
        default: dev
      image_tag:
        required: false
        type: string
        description: the tag to apply to the docker image
      version:
        required: false
        type: string
        description: the semantic version use to represent this build
        default: latest
      eks_role_arn:
        required: true
        type: string
        description: the role use to connect to EKS
      eks_cluster_name:
        required: true
        type: string
        description: the name of the EKS cluster


env:
  ECR_REPO_NAME: 'lis/limon-ui'
  AWS_REGION: us-west-2
  ECR_ROLE_ARN: arn:aws:iam::016272216798:role/ecr-rw-lis-repos
  EKS_ROLE_ARN: ${{inputs.eks_role_arn}}
  EKS_CLUSTER: ${{inputs.eks_cluster_name}}
jobs:
  build-deploy:
    name: Deploy to EKS via Pulumi
    runs-on: [self-hosted, linux, X64]
    environment: ${{ inputs.stack }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16.x
      - name: Build dist package
        run: npm ci && npm run build --if-present
        env:
          APP_VERSION: ${{inputs.version}}
          APP_IMAGE_TAG:  ${{inputs.image_tag}}
          APP_COMMIT_ID: ${{github.sha}}
      - name: Install pulumi dependencies
        working-directory: 'infra'
        run: npm install
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{env.EKS_ROLE_ARN}}
          role-duration-seconds: 1200
          aws-region: ${{env.AWS_REGION}}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Pulumi Deploy
        uses: pulumi/actions@v3
        with:
          work-dir: 'infra'
          command: ${{ github.event.pull_request && 'preview' || 'up'}}
          stack-name: delfi/${{ inputs.stack }}
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          PULUMI_CONFIG_PASSPHRASE: ${{ secrets.PULUMI_CONFIG_PASSPHRASE }}
          IMAGE_TAG: ${{inputs.image_tag}}
